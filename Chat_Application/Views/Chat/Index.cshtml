@model IEnumerable<ChatMessage>
@{
    ViewData["Title"] = "Chat";
    var username = ViewBag.Username as string ?? "Guest";
    var role = ViewBag.UserRole as string ?? "Guest";
}

<div class="container py-4" style="max-width: 720px;">
    <!-- Header with logout -->
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h4 class="text-primary mb-0">Welcome, @username</h4>
        <form asp-controller="Account" asp-action="Logout" method="post" style="display:inline;">
            <button type="submit" class="btn btn-outline-danger btn-sm">Logout</button>
        </form>
    </div>

    <!-- Chat Card -->
    <div class="card shadow-sm border-0">
        <div class="card-header bg-primary text-white">
            <strong>Chat Room</strong>
        </div>
        <div class="card-body d-flex flex-column" style="height: 500px;">
            <!-- Messages Area -->
            <div id="messagesList" class="flex-grow-1 overflow-auto p-3 bg-light rounded" style="border: 1px solid #ddd;">
                @foreach (var msg in Model)
                {
                    <div class="mb-2">
                        <span class="fw-bold text-primary">@msg.UserName</span>:
                        <span>@msg.Message</span>
                        <small class="text-muted">(@msg.SentAt.ToLocalTime().ToString("HH:mm"))</small>
                    </div>
                }
            </div>

            <!-- Input Area -->
            <div class="border-top mt-3 pt-3 bg-white">
                <div class="input-group">
                    <textarea id="message" class="form-control" rows="2" placeholder="Type your message" aria-label="Message"></textarea>

                    @if (role != "Admin")
                    {
                        <select id="userDropdown" class="form-select ms-2" aria-label="Select user" style="width: 180px;">
                        </select>
                    }

                    <button id="sendBtn" class="btn btn-primary ms-2" onclick="sendMessage()" disabled>Send</button>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- SignalR Script -->
<script src="~/lib/microsoft-signalr/signalr.min.js"></script>
<script>
    const username = "@username";
    const role = "@role";

    const connection = new signalR.HubConnectionBuilder()
        .withUrl("/chathub")
        .build();

    const messageInput = document.getElementById("message");
    const sendBtn = document.getElementById("sendBtn");

    messageInput.addEventListener("input", () => {
        sendBtn.disabled = messageInput.value.trim().length === 0;
    });

    connection.on("ReceiveMessage", function (user, message, sentAt) {
        const time = new Date(sentAt).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });
        const msgContainer = document.createElement("div");
        msgContainer.classList.add("mb-2");
        msgContainer.innerHTML = `<span class="fw-bold text-primary">${user}</span>:
                                  <span>${message}</span>
                                  <small class="text-muted">(${time})</small>`;
        const messagesList = document.getElementById("messagesList");
        messagesList.appendChild(msgContainer);

        messagesList.scrollTop = messagesList.scrollHeight;
    });

    connection.start()
        .then(() => {
            connection.invoke("RegisterUser", username);
        })
        .catch(err => console.error(err.toString()));

    connection.on("UserListUpdated", function(users) {
        const dropdown = document.getElementById("userDropdown");
        if (!dropdown) return;

        dropdown.innerHTML = "";
        users.forEach(user => {
            if (user !== username) {
                let option = document.createElement("option");
                option.value = user;
                option.text = user;
                dropdown.add(option);
            }
        });
    });

    function sendMessage() {
        const message = messageInput.value.trim();
        if (!message) return;

        let recipient = role === "Admin" ? "" : document.getElementById("userDropdown").value;

        connection.invoke("SendMessage", username, role, recipient, message).catch(function (err) {
            console.error(err.toString());
        });

        messageInput.value = "";
        sendBtn.disabled = true;
        messageInput.focus();
    }

    window.onload = () => {
        const messagesList = document.getElementById("messagesList");
        messagesList.scrollTop = messagesList.scrollHeight;
    };
</script>
